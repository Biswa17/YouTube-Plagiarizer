<?php

namespace App\Jobs;

use App\Models\Video;
use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Foundation\Bus\Dispatchable;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Queue\SerializesModels;
use Illuminate\Support\Facades\Storage;

class TranscribeAudio implements ShouldQueue
{
    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;

    /**
     * Create a new job instance.
     */
    public function __construct(public Video $video)
    {
        //
    }

    /**
     * Execute the job.
     */
    public function handle(): void
    {
        try {
            $this->video->update(['status' => 'transcribing']);

            // Check if there's an existing transcript file for this video
            $existingTranscriptPath = base_path('scripts/transcript/' . $this->video->id . '.txt');
            
            if (file_exists($existingTranscriptPath)) {
                // Read existing transcript
                $transcriptContent = file_get_contents($existingTranscriptPath);
            } else {
                // Placeholder for actual transcription logic
                // In a real application, this would call an external API or a local script
                sleep(5); // Simulate work

                $transcriptContent = "This is a sample transcript for the YouTube video.\n\n" .
                                   "Video URL: " . $this->video->youtube_url . "\n\n" .
                                   "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n\n" .
                                   "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n" .
                                   "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.\n\n" .
                                   "Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.\n\n" .
                                   "This transcript was generated by YouTube Plazarizer on " . now()->format('Y-m-d H:i:s') . ".";
            }

            // Store transcript in Laravel's storage system
            $transcriptPath = 'transcripts/' . $this->video->id . '.txt';
            Storage::put($transcriptPath, $transcriptContent);

            $this->video->update([
                'status' => 'completed',
                'transcript' => $transcriptContent, // Store content in database for quick access
                'transcript_path' => $transcriptPath, // Store file path for downloads
            ]);

        } catch (\Exception $e) {
            $this->video->update([
                'status' => 'failed',
                'error_message' => 'Transcription failed: ' . $e->getMessage(),
            ]);
            
            throw $e;
        }
    }
}
